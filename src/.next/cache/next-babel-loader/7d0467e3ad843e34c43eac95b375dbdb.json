{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport Popup from \"reactjs-popup\";\nimport { selectMuscle, changeMuscleForce } from '../actions/index';\n\nvar MusclePopUp =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MusclePopUp, _Component);\n\n  function MusclePopUp() {\n    var _getPrototypeOf2;\n\n    var _temp, _this;\n\n    _classCallCheck(this, MusclePopUp);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _possibleConstructorReturn(_this, (_temp = _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MusclePopUp)).call.apply(_getPrototypeOf2, [this].concat(args))), _this.closeModal = function () {\n      _this.props.selectMuscle(null);\n    }, _this.isMuscleSelected = function () {\n      if (_this.props.selectedMuscle) {\n        return true;\n      }\n\n      return false;\n    }, _this.handleForceOnMuscle = function (event) {\n      event.preventDefault();\n\n      _this.props.changeMuscleForce(event.target.innerText, _this.props.selectedMuscle, _this.props.muscles);\n\n      _this.props.selectMuscle(null);\n    }, _temp));\n  }\n\n  _createClass(MusclePopUp, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      return nextProps.selectedMuscle !== this.props.selectedMuscle;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(Popup, {\n        modal: true,\n        position: \"right center\",\n        open: this.isMuscleSelected(),\n        onClose: this.closeModal\n      }, __jsx(\"div\", {\n        className: \"scale-muscle-popup\"\n      }, __jsx(\"div\", {\n        className: \"gradient-square\"\n      }, __jsx(\"h5\", {\n        className: \"gradient-square-text\"\n      }, this.props.selectedMuscle)), __jsx(\"button\", {\n        onClick: this.handleForceOnMuscle,\n        className: \"zero-force\"\n      }, \"0\"), __jsx(\"button\", {\n        onClick: this.handleForceOnMuscle,\n        className: \"one-force\"\n      }, \"1\"), __jsx(\"button\", {\n        onClick: this.handleForceOnMuscle,\n        className: \"two-force\"\n      }, \"2\"), __jsx(\"button\", {\n        onClick: this.handleForceOnMuscle,\n        className: \"three-force\"\n      }, \"3\"), __jsx(\"button\", {\n        onClick: this.handleForceOnMuscle,\n        className: \"four-force\"\n      }, \"4\"), __jsx(\"button\", {\n        onClick: this.handleForceOnMuscle,\n        className: \"five-force\"\n      }, \"5\")));\n    }\n  }]);\n\n  return MusclePopUp;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    selectedMuscle: state.selectedMuscle,\n    muscles: state.muscles\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    selectMuscle: selectMuscle,\n    changeMuscleForce: changeMuscleForce\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MusclePopUp);","map":null,"metadata":{},"sourceType":"module"}