{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/bjmrq/code/BjMrq/React-VizzMD-MVP/src/containers/TableRow.jsx\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { selectMuscle } from '../actions/index';\n\nvar TableRow =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TableRow, _Component);\n\n  function TableRow() {\n    var _getPrototypeOf2;\n\n    var _temp, _this;\n\n    _classCallCheck(this, TableRow);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _possibleConstructorReturn(_this, (_temp = _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TableRow)).call.apply(_getPrototypeOf2, [this].concat(args))), _this.handleClickMuscle = function (event) {\n      event.persist();\n\n      _this.props.selectMuscle(event.target.getAttribute('id'));\n    }, _this.btnForceClass = function (force) {\n      var classes = \"btn btn-force\";\n\n      switch (force) {\n        case 1:\n          {\n            return \"\".concat(classes, \" one-force\");\n          }\n\n        case 2:\n          {\n            return \"\".concat(classes, \" two-force\");\n          }\n\n        case 3:\n          {\n            return \"\".concat(classes, \" three-force\");\n          }\n\n        case 4:\n          {\n            return \"\".concat(classes, \" four-force\");\n          }\n\n        case 5:\n          {\n            return \"\".concat(classes, \" five-force\");\n          }\n\n        default:\n          {\n            return classes;\n          }\n      }\n    }, _temp));\n  }\n\n  _createClass(TableRow, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      return this.props.rightForce !== nextProps.rightForce || this.props.leftForce !== nextProps.leftForce;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          name = _this$props.name,\n          nerf = _this$props.nerf,\n          root = _this$props.root,\n          rightForce = _this$props.rightForce,\n          rightMuscleId = _this$props.rightMuscleId,\n          leftForce = _this$props.leftForce,\n          leftMuscleId = _this$props.leftMuscleId;\n      return __jsx(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, __jsx(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, __jsx(\"button\", {\n        className: this.btnForceClass(rightForce),\n        id: rightMuscleId,\n        onClick: this.handleClickMuscle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, rightForce, __jsx(\"i\", {\n        className: \"arrow down\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }))), __jsx(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, name), __jsx(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, nerf), __jsx(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, root), __jsx(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, __jsx(\"button\", {\n        className: this.btnForceClass(leftForce),\n        id: leftMuscleId,\n        onClick: this.handleClickMuscle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, leftForce, __jsx(\"i\", {\n        className: \"arrow down\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return TableRow;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    selectedMuscle: state.selectedMuscle\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    selectMuscle: selectMuscle\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableRow);","map":{"version":3,"sources":["/home/bjmrq/code/BjMrq/React-VizzMD-MVP/src/containers/TableRow.jsx"],"names":["React","Component","bindActionCreators","connect","selectMuscle","TableRow","handleClickMuscle","event","persist","props","target","getAttribute","btnForceClass","force","classes","nextProps","rightForce","leftForce","name","nerf","root","rightMuscleId","leftMuscleId","mapStateToProps","state","selectedMuscle","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { selectMuscle } from '../actions/index';\n\nclass TableRow extends Component {\n  shouldComponentUpdate(nextProps) {\n    return (this.props.rightForce !== nextProps.rightForce\n      ||\n      this.props.leftForce !== nextProps.leftForce);\n  }\n\n  handleClickMuscle = (event) => {\n    event.persist();\n    this.props.selectMuscle(event.target.getAttribute('id'));\n  }\n\n  btnForceClass = (force) => {\n    const classes = \"btn btn-force\";\n    switch (force) {\n      case 1: {\n        return `${classes} one-force`;\n      }\n      case 2: {\n        return `${classes} two-force`;\n      }\n      case 3: {\n        return `${classes} three-force`;\n      }\n      case 4: {\n        return `${classes} four-force`;\n      }\n      case 5: {\n        return `${classes} five-force`;\n      }\n      default: {\n        return classes;\n      }\n    }\n  }\n\n  render() {\n    const { name, nerf, root, rightForce, rightMuscleId, leftForce, leftMuscleId } = this.props;\n    return (\n      <tr >\n        <td><button className={this.btnForceClass(rightForce)} id={rightMuscleId} onClick={this.handleClickMuscle}>{rightForce}<i className=\"arrow down\" /></button></td>\n        <td>{name}</td>\n        <td>{nerf}</td>\n        <td>{root}</td>\n        <td><button className={this.btnForceClass(leftForce)} id={leftMuscleId} onClick={this.handleClickMuscle}>{leftForce}<i className=\"arrow down\" /></button></td>\n      </tr>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    selectedMuscle: state.selectedMuscle,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n    { selectMuscle },\n    dispatch\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableRow);\n"]},"metadata":{},"sourceType":"module"}