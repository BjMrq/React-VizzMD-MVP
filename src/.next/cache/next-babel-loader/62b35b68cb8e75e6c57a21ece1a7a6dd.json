{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { selectMuscle } from '../actions/index';\n\nvar TableRow =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TableRow, _Component);\n\n  function TableRow() {\n    var _getPrototypeOf2;\n\n    var _temp, _this;\n\n    _classCallCheck(this, TableRow);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _possibleConstructorReturn(_this, (_temp = _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TableRow)).call.apply(_getPrototypeOf2, [this].concat(args))), _this.handleClickMuscle = function (event) {\n      event.persist();\n\n      _this.props.selectMuscle(event.target.getAttribute('id'));\n    }, _this.btnForceClass = function (force) {\n      var classes = \"btn btn-force\";\n\n      switch (force) {\n        case 1:\n          {\n            return \"\".concat(classes, \" one-force\");\n          }\n\n        case 2:\n          {\n            return \"\".concat(classes, \" two-force\");\n          }\n\n        case 3:\n          {\n            return \"\".concat(classes, \" three-force\");\n          }\n\n        case 4:\n          {\n            return \"\".concat(classes, \" four-force\");\n          }\n\n        case 5:\n          {\n            return \"\".concat(classes, \" five-force\");\n          }\n\n        default:\n          {\n            return classes;\n          }\n      }\n    }, _temp));\n  }\n\n  _createClass(TableRow, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      return this.props.rightForce !== nextProps.rightForce || this.props.leftForce !== nextProps.leftForce;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          name = _this$props.name,\n          nerf = _this$props.nerf,\n          root = _this$props.root,\n          rightForce = _this$props.rightForce,\n          rightMuscleId = _this$props.rightMuscleId,\n          leftForce = _this$props.leftForce,\n          leftMuscleId = _this$props.leftMuscleId;\n      return __jsx(\"tr\", null, __jsx(\"td\", null, __jsx(\"button\", {\n        className: this.btnForceClass(rightForce),\n        id: rightMuscleId,\n        onClick: this.handleClickMuscle\n      }, rightForce, __jsx(\"i\", {\n        className: \"arrow down\"\n      }))), __jsx(\"td\", null, name), __jsx(\"td\", null, nerf), __jsx(\"td\", null, root), __jsx(\"td\", null, __jsx(\"button\", {\n        className: this.btnForceClass(leftForce),\n        id: leftMuscleId,\n        onClick: this.handleClickMuscle\n      }, leftForce, __jsx(\"i\", {\n        className: \"arrow down\"\n      }))));\n    }\n  }]);\n\n  return TableRow;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    selectedMuscle: state.selectedMuscle\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    selectMuscle: selectMuscle\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableRow);","map":null,"metadata":{},"sourceType":"module"}