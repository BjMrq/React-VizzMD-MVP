{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport React, { PureComponent, Fragment } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport Popup from \"reactjs-popup\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\nimport { enterPatient, pageLoaded } from '../actions/index';\n\nvar PatientPopUp =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(PatientPopUp, _PureComponent);\n\n  function PatientPopUp(props) {\n    var _this;\n\n    _classCallCheck(this, PatientPopUp);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PatientPopUp).call(this, props));\n\n    _this.openModal = function () {\n      _this.setState({\n        open: true\n      });\n    };\n\n    _this.closeModal = function () {\n      _this.setState({\n        open: false\n      });\n    };\n\n    _this.handleChange = function (event) {\n      _this.setState({\n        patient: event.target.value\n      });\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n\n      _this.props.enterPatient(_this.state.patient);\n\n      _this.setState({\n        patient: \"\",\n        open: false\n      });\n    };\n\n    _this.focusInput = function () {\n      setTimeout(function () {\n        if (_this.patientRefInput) {\n          _this.patientRefInput.focus();\n        }\n      }, 100);\n    };\n\n    _this.state = {\n      patient: '',\n      open: false\n    };\n    return _this;\n  }\n\n  _createClass(PatientPopUp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.firstPageLoad) {\n        this.openModal();\n        this.props.pageLoaded();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Fragment, null, __jsx(\"button\", {\n        className: \"btn btn-blue\",\n        onClick: this.openModal\n      }, \"Change reference \", __jsx(FontAwesomeIcon, {\n        icon: faSearch\n      })), __jsx(Popup, {\n        modal: true,\n        className: \"pop-up-print\",\n        position: \"right center\",\n        open: this.state.open,\n        onClose: this.closeModal,\n        onOpen: this.focusInput\n      }, __jsx(\"form\", {\n        onSubmit: this.handleSubmit\n      }, __jsx(\"div\", {\n        className: \"gradient-square\"\n      }, __jsx(\"h5\", {\n        className: \"gradient-square-text\"\n      }, \"What is the patient's reference?\")), __jsx(\"input\", {\n        className: \"form-control patient-ref-input\",\n        type: \"text\",\n        id: \"ref\",\n        ref: function ref(el) {\n          _this2.patientRefInput = el;\n        },\n        name: \"ref\",\n        required: true,\n        size: \"15\",\n        value: this.state.patient,\n        onChange: this.handleChange\n      }), __jsx(\"button\", {\n        className: \"btn btn-blue btn-pop-up-ok float-right\",\n        type: \"submit\"\n      }, \"Ok\"))));\n    }\n  }]);\n\n  return PatientPopUp;\n}(PureComponent);\n\nfunction mapStateToProps(state) {\n  return {\n    firstPageLoad: state.firstPageLoad\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    enterPatient: enterPatient,\n    pageLoaded: pageLoaded\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PatientPopUp);","map":null,"metadata":{},"sourceType":"module"}