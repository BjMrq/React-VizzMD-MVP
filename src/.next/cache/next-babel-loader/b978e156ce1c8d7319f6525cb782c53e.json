{"ast":null,"code":"var _jsxFileName = \"/home/bjmrq/code/BjMrq/React-VizzMD-MVP/src/containers/MusclePopUp.jsx\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport Popup from \"reactjs-popup\";\nimport { selectMuscle, changeMuscleForce } from '../actions/index';\n\nclass MusclePopUp extends Component {\n  constructor(...args) {\n    var _temp;\n\n    return _temp = super(...args), this.closeModal = () => {\n      this.props.selectMuscle(null);\n    }, this.isMuscleSelected = () => {\n      if (this.props.selectedMuscle) {\n        return true;\n      }\n\n      return false;\n    }, this.handleForceOnMuscle = event => {\n      event.preventDefault();\n      this.props.changeMuscleForce(event.target.innerText, this.props.selectedMuscle, this.props.muscles);\n      this.props.selectMuscle(null);\n    }, _temp;\n  }\n\n  shouldComponentUpdate(nextProps) {\n    return nextProps.selectedMuscle !== this.props.selectedMuscle;\n  }\n\n  render() {\n    return __jsx(Popup, {\n      modal: true,\n      position: \"right center\",\n      open: this.isMuscleSelected(),\n      onClose: this.closeModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"scale-muscle-popup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"gradient-square\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, __jsx(\"h5\", {\n      className: \"gradient-square-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, this.props.selectedMuscle)), __jsx(\"button\", {\n      onClick: this.handleForceOnMuscle,\n      className: \"zero-force\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"0\"), __jsx(\"button\", {\n      onClick: this.handleForceOnMuscle,\n      className: \"one-force\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"1\"), __jsx(\"button\", {\n      onClick: this.handleForceOnMuscle,\n      className: \"two-force\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"2\"), __jsx(\"button\", {\n      onClick: this.handleForceOnMuscle,\n      className: \"three-force\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"3\"), __jsx(\"button\", {\n      onClick: this.handleForceOnMuscle,\n      className: \"four-force\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"4\"), __jsx(\"button\", {\n      onClick: this.handleForceOnMuscle,\n      className: \"five-force\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"5\")));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    selectedMuscle: state.selectedMuscle,\n    muscles: state.muscles\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    selectMuscle,\n    changeMuscleForce\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MusclePopUp);","map":{"version":3,"sources":["/home/bjmrq/code/BjMrq/React-VizzMD-MVP/src/containers/MusclePopUp.jsx"],"names":["React","Component","bindActionCreators","connect","Popup","selectMuscle","changeMuscleForce","MusclePopUp","closeModal","props","isMuscleSelected","selectedMuscle","handleForceOnMuscle","event","preventDefault","target","innerText","muscles","shouldComponentUpdate","nextProps","render","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport Popup from \"reactjs-popup\";\n\nimport { selectMuscle, changeMuscleForce } from '../actions/index';\n\n\nclass MusclePopUp extends Component {\n  shouldComponentUpdate(nextProps) {\n    return (nextProps.selectedMuscle !== this.props.selectedMuscle);\n  }\n\n  closeModal = () => {\n    this.props.selectMuscle(null);\n  }\n\n  isMuscleSelected = () => {\n    if (this.props.selectedMuscle) {\n      return true;\n    }\n    return false;\n  }\n\n  handleForceOnMuscle = (event) => {\n    event.preventDefault();\n    this.props.changeMuscleForce(\n      event.target.innerText,\n      this.props.selectedMuscle,\n      this.props.muscles\n    );\n    this.props.selectMuscle(null);\n  }\n\n  render() {\n    return (\n      <Popup\n        modal\n        position=\"right center\"\n        open={this.isMuscleSelected()}\n        onClose={this.closeModal}\n      >\n        <div className=\"scale-muscle-popup\">\n          <div className=\"gradient-square\">\n            <h5 className=\"gradient-square-text\">{this.props.selectedMuscle}</h5>\n          </div>\n          <button onClick={this.handleForceOnMuscle} className=\"zero-force\">0</button>\n          <button onClick={this.handleForceOnMuscle} className=\"one-force\">1</button>\n          <button onClick={this.handleForceOnMuscle} className=\"two-force\">2</button>\n          <button onClick={this.handleForceOnMuscle} className=\"three-force\">3</button>\n          <button onClick={this.handleForceOnMuscle} className=\"four-force\">4</button>\n          <button onClick={this.handleForceOnMuscle} className=\"five-force\">5</button>\n        </div>\n      </Popup>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    selectedMuscle: state.selectedMuscle,\n    muscles: state.muscles\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n    { selectMuscle, changeMuscleForce },\n    dispatch\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MusclePopUp);\n"]},"metadata":{},"sourceType":"module"}