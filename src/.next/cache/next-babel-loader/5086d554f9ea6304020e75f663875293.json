{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/bjmrq/code/BjMrq/React-VizzMD-MVP/src/containers/MusclesTable.jsx\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport TableRow from './TableRow';\n\nvar MusclesTabe =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MusclesTabe, _Component);\n\n  function MusclesTabe() {\n    var _getPrototypeOf2;\n\n    var _temp, _this;\n\n    _classCallCheck(this, MusclesTabe);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _possibleConstructorReturn(_this, (_temp = _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MusclesTabe)).call.apply(_getPrototypeOf2, [this].concat(args))), _this.buildTable = function () {\n      return _this.props.muscles.map(function (muscleObj) {\n        return __jsx(TableRow, {\n          rightMuscleId: \"\".concat(muscleObj.name, \"-right\"),\n          leftMuscleId: \"\".concat(muscleObj.name, \"-left\"),\n          name: muscleObj.name,\n          rightForce: muscleObj.forceRight,\n          nerf: muscleObj.nerf,\n          root: muscleObj.root,\n          leftForce: muscleObj.forceLeft,\n          key: muscleObj.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14\n          },\n          __self: this\n        });\n      });\n    }, _temp));\n  }\n\n  _createClass(MusclesTabe, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      return nextProps.muscles !== this.props.muscles;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"table\", {\n        className: \"table table-striped table-bordered\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, __jsx(\"thead\", {\n        className: \"thead-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, __jsx(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, __jsx(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Right\"), __jsx(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Muscle\"), __jsx(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Nerf\"), __jsx(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Root\"), __jsx(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Left\"))), __jsx(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, this.buildTable()));\n    }\n  }]);\n\n  return MusclesTabe;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    muscles: state.muscles\n  };\n}\n\nexport default connect(mapStateToProps)(MusclesTabe);","map":{"version":3,"sources":["/home/bjmrq/code/BjMrq/React-VizzMD-MVP/src/containers/MusclesTable.jsx"],"names":["React","Component","connect","TableRow","MusclesTabe","buildTable","props","muscles","map","muscleObj","name","forceRight","nerf","root","forceLeft","nextProps","mapStateToProps","state"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,QAAP,MAAqB,YAArB;;IAEMC,W;;;;;;;;;;;;;;;;2MAKJC,U,GAAa,YAAM;AACjB,aAAO,MAAKC,KAAL,CAAWC,OAAX,CAAmBC,GAAnB,CAAuB,UAACC,SAAD,EAAe;AAC3C,eACE,MAAC,QAAD;AACE,UAAA,aAAa,YAAKA,SAAS,CAACC,IAAf,WADf;AAEE,UAAA,YAAY,YAAKD,SAAS,CAACC,IAAf,UAFd;AAGE,UAAA,IAAI,EAAED,SAAS,CAACC,IAHlB;AAIE,UAAA,UAAU,EAAED,SAAS,CAACE,UAJxB;AAKE,UAAA,IAAI,EAAEF,SAAS,CAACG,IALlB;AAME,UAAA,IAAI,EAAEH,SAAS,CAACI,IANlB;AAOE,UAAA,SAAS,EAAEJ,SAAS,CAACK,SAPvB;AAQE,UAAA,GAAG,EAAEL,SAAS,CAACC,IARjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,OAbM,CAAP;AAcD,K;;;;;0CAnBqBK,S,EAAW;AAC/B,aAAQA,SAAS,CAACR,OAAV,KAAsB,KAAKD,KAAL,CAAWC,OAAzC;AACD;;;6BAmBQ;AACP,aACE;AAAO,QAAA,SAAS,EAAC,oCAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAI,QAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,EAGE;AAAI,QAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,EAIE;AAAI,QAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,EAKE;AAAI,QAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,CADF,CADF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKF,UAAL,EADH,CAVF,CADF;AAgBD;;;;EAvCuBJ,S;;AA0C1B,SAASe,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLV,IAAAA,OAAO,EAAEU,KAAK,CAACV;AADV,GAAP;AAGD;;AAED,eAAeL,OAAO,CAACc,eAAD,CAAP,CAAyBZ,WAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport TableRow from './TableRow';\n\nclass MusclesTabe extends Component {\n  shouldComponentUpdate(nextProps) {\n    return (nextProps.muscles !== this.props.muscles);\n  }\n\n  buildTable = () => {\n    return this.props.muscles.map((muscleObj) => {\n      return (\n        <TableRow\n          rightMuscleId={`${muscleObj.name}-right`}\n          leftMuscleId={`${muscleObj.name}-left`}\n          name={muscleObj.name}\n          rightForce={muscleObj.forceRight}\n          nerf={muscleObj.nerf}\n          root={muscleObj.root}\n          leftForce={muscleObj.forceLeft}\n          key={muscleObj.name}\n        />\n      );\n    });\n  }\n\n  render() {\n    return (\n      <table className=\"table table-striped table-bordered\">\n        <thead className=\"thead-light\">\n          <tr>\n            <th scope=\"col\">Right</th>\n            <th scope=\"col\">Muscle</th>\n            <th scope=\"col\">Nerf</th>\n            <th scope=\"col\">Root</th>\n            <th scope=\"col\">Left</th>\n          </tr>\n        </thead>\n        <tbody>\n          {this.buildTable()}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    muscles: state.muscles\n  };\n}\n\nexport default connect(mapStateToProps)(MusclesTabe);\n"]},"metadata":{},"sourceType":"module"}