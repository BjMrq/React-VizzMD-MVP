{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { selectMuscle } from '../actions/index';\n\nclass TableRow extends Component {\n  constructor(...args) {\n    var _temp;\n\n    return _temp = super(...args), this.handleClickMuscle = event => {\n      event.persist();\n      this.props.selectMuscle(event.target.getAttribute('id'));\n    }, this.btnForceClass = force => {\n      const classes = \"btn btn-force\";\n\n      switch (force) {\n        case 1:\n          {\n            return `${classes} one-force`;\n          }\n\n        case 2:\n          {\n            return `${classes} two-force`;\n          }\n\n        case 3:\n          {\n            return `${classes} three-force`;\n          }\n\n        case 4:\n          {\n            return `${classes} four-force`;\n          }\n\n        case 5:\n          {\n            return `${classes} five-force`;\n          }\n\n        default:\n          {\n            return classes;\n          }\n      }\n    }, _temp;\n  }\n\n  shouldComponentUpdate(nextProps) {\n    return this.props.rightForce !== nextProps.rightForce || this.props.leftForce !== nextProps.leftForce;\n  }\n\n  render() {\n    const {\n      name,\n      nerf,\n      root,\n      rightForce,\n      rightMuscleId,\n      leftForce,\n      leftMuscleId\n    } = this.props;\n    return __jsx(\"tr\", null, __jsx(\"td\", null, __jsx(\"button\", {\n      className: this.btnForceClass(rightForce),\n      id: rightMuscleId,\n      onClick: this.handleClickMuscle\n    }, rightForce, __jsx(\"i\", {\n      className: \"arrow down\"\n    }))), __jsx(\"td\", null, name), __jsx(\"td\", null, nerf), __jsx(\"td\", null, root), __jsx(\"td\", null, __jsx(\"button\", {\n      className: this.btnForceClass(leftForce),\n      id: leftMuscleId,\n      onClick: this.handleClickMuscle\n    }, leftForce, __jsx(\"i\", {\n      className: \"arrow down\"\n    }))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    selectedMuscle: state.selectedMuscle\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    selectMuscle\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableRow);","map":null,"metadata":{},"sourceType":"module"}