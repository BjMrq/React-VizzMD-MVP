{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/bjmrq/code/BjMrq/React-VizzMD-MVP/src/containers/PatientPopUp.jsx\";\nvar __jsx = React.createElement;\nimport React, { PureComponent, Fragment } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport Popup from \"reactjs-popup\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\nimport { enterPatient, pageLoaded } from '../actions/index';\n\nvar PatientPopUp =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(PatientPopUp, _PureComponent);\n\n  function PatientPopUp(props) {\n    var _this;\n\n    _classCallCheck(this, PatientPopUp);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PatientPopUp).call(this, props));\n\n    _this.openModal = function () {\n      _this.setState({\n        open: true\n      });\n    };\n\n    _this.closeModal = function () {\n      _this.setState({\n        open: false\n      });\n    };\n\n    _this.handleChange = function (event) {\n      _this.setState({\n        patient: event.target.value\n      });\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n\n      _this.props.enterPatient(_this.state.patient);\n\n      _this.setState({\n        patient: \"\",\n        open: false\n      });\n    };\n\n    _this.focusInput = function () {\n      setTimeout(function () {\n        if (_this.patientRefInput) {\n          _this.patientRefInput.focus();\n        }\n      }, 100);\n    };\n\n    _this.state = {\n      patient: '',\n      open: false\n    };\n    return _this;\n  }\n\n  _createClass(PatientPopUp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.firstPageLoad) {\n        this.openModal();\n        this.props.pageLoaded();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, __jsx(\"button\", {\n        className: \"btn btn-blue\",\n        onClick: this.openModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Change reference \", __jsx(FontAwesomeIcon, {\n        icon: faSearch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      })), __jsx(Popup, {\n        modal: true,\n        className: \"pop-up-print\",\n        position: \"right center\",\n        open: this.state.open,\n        onClose: this.closeModal,\n        onOpen: this.focusInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, __jsx(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"gradient-square\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, __jsx(\"h5\", {\n        className: \"gradient-square-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"What is the patient's reference?\")), __jsx(\"input\", {\n        className: \"form-control patient-ref-input\",\n        type: \"text\",\n        id: \"ref\",\n        ref: function ref(el) {\n          _this2.patientRefInput = el;\n        },\n        name: \"ref\",\n        required: true,\n        size: \"15\",\n        value: this.state.patient,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), __jsx(\"button\", {\n        className: \"btn btn-blue btn-pop-up-ok float-right\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Ok\"))));\n    }\n  }]);\n\n  return PatientPopUp;\n}(PureComponent);\n\nfunction mapStateToProps(state) {\n  return {\n    firstPageLoad: state.firstPageLoad\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    enterPatient: enterPatient,\n    pageLoaded: pageLoaded\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PatientPopUp);","map":{"version":3,"sources":["/home/bjmrq/code/BjMrq/React-VizzMD-MVP/src/containers/PatientPopUp.jsx"],"names":["React","PureComponent","Fragment","bindActionCreators","connect","Popup","FontAwesomeIcon","faSearch","enterPatient","pageLoaded","PatientPopUp","props","openModal","setState","open","closeModal","handleChange","event","patient","target","value","handleSubmit","preventDefault","state","focusInput","setTimeout","patientRefInput","focus","firstPageLoad","el","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { PureComponent, Fragment } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport Popup from \"reactjs-popup\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\n\nimport { enterPatient, pageLoaded } from '../actions/index';\n\nclass PatientPopUp extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = { patient: '', open: false };\n  }\n\n  componentDidMount() {\n    if (this.props.firstPageLoad) {\n      this.openModal();\n      this.props.pageLoaded();\n    }\n  }\n\n  openModal = () => {\n    this.setState({ open: true });\n  }\n\n  closeModal = () => {\n    this.setState({ open: false });\n  }\n\n  handleChange = (event) => {\n    this.setState({ patient: event.target.value });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.props.enterPatient(this.state.patient);\n    this.setState({ patient: \"\", open: false });\n  }\n\n  focusInput = () => {\n    setTimeout(() => {\n      if (this.patientRefInput) {\n        this.patientRefInput.focus();\n      }\n    }, 100);\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <button className=\"btn btn-blue\" onClick={this.openModal}>Change reference <FontAwesomeIcon icon={faSearch} /></button>\n        <Popup\n          modal\n          className=\"pop-up-print\"\n          position=\"right center\"\n          open={this.state.open}\n          onClose={this.closeModal}\n          onOpen={this.focusInput}\n        >\n          <form onSubmit={this.handleSubmit} >\n            <div className=\"gradient-square\">\n              <h5 className=\"gradient-square-text\">What is the patient's reference?</h5>\n            </div>\n            <input\n              className=\"form-control patient-ref-input\"\n              type=\"text\"\n              id=\"ref\"\n              ref={(el) => { this.patientRefInput = el; }}\n              name=\"ref\"\n              required\n              size=\"15\"\n              value={this.state.patient}\n              onChange={this.handleChange}\n            />\n            <button className=\"btn btn-blue btn-pop-up-ok float-right\" type=\"submit\">Ok</button>\n          </form>\n\n        </Popup>\n      </Fragment>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    firstPageLoad: state.firstPageLoad\n  };\n}\n\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n    { enterPatient, pageLoaded },\n    dispatch\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PatientPopUp);\n"]},"metadata":{},"sourceType":"module"}