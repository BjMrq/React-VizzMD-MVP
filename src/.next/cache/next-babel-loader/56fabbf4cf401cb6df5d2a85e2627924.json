{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/bjmrq/code/BjMrq/React-VizzMD-MVP/src/containers/MusclePopUp.jsx\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport Popup from \"reactjs-popup\";\nimport { selectMuscle, changeMuscleForce } from '../actions/index';\n\nvar MusclePopUp =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MusclePopUp, _Component);\n\n  function MusclePopUp() {\n    var _getPrototypeOf2;\n\n    var _temp, _this;\n\n    _classCallCheck(this, MusclePopUp);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _possibleConstructorReturn(_this, (_temp = _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MusclePopUp)).call.apply(_getPrototypeOf2, [this].concat(args))), _this.closeModal = function () {\n      _this.props.selectMuscle(null);\n    }, _this.isMuscleSelected = function () {\n      if (_this.props.selectedMuscle) {\n        return true;\n      }\n\n      return false;\n    }, _this.handleForceOnMuscle = function (event) {\n      event.preventDefault();\n\n      _this.props.changeMuscleForce(event.target.innerText, _this.props.selectedMuscle, _this.props.muscles);\n\n      _this.props.selectMuscle(null);\n    }, _temp));\n  }\n\n  _createClass(MusclePopUp, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      return nextProps.selectedMuscle !== this.props.selectedMuscle;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(Popup, {\n        modal: true,\n        position: \"right center\",\n        open: this.isMuscleSelected(),\n        onClose: this.closeModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"scale-muscle-popup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"gradient-square\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, __jsx(\"h5\", {\n        className: \"gradient-square-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, this.props.selectedMuscle)), __jsx(\"button\", {\n        onClick: this.handleForceOnMuscle,\n        className: \"zero-force\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"0\"), __jsx(\"button\", {\n        onClick: this.handleForceOnMuscle,\n        className: \"one-force\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"1\"), __jsx(\"button\", {\n        onClick: this.handleForceOnMuscle,\n        className: \"two-force\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"2\"), __jsx(\"button\", {\n        onClick: this.handleForceOnMuscle,\n        className: \"three-force\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"3\"), __jsx(\"button\", {\n        onClick: this.handleForceOnMuscle,\n        className: \"four-force\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"4\"), __jsx(\"button\", {\n        onClick: this.handleForceOnMuscle,\n        className: \"five-force\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"5\")));\n    }\n  }]);\n\n  return MusclePopUp;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    selectedMuscle: state.selectedMuscle,\n    muscles: state.muscles\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    selectMuscle: selectMuscle,\n    changeMuscleForce: changeMuscleForce\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MusclePopUp);","map":{"version":3,"sources":["/home/bjmrq/code/BjMrq/React-VizzMD-MVP/src/containers/MusclePopUp.jsx"],"names":["React","Component","bindActionCreators","connect","Popup","selectMuscle","changeMuscleForce","MusclePopUp","closeModal","props","isMuscleSelected","selectedMuscle","handleForceOnMuscle","event","preventDefault","target","innerText","muscles","nextProps","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport Popup from \"reactjs-popup\";\n\nimport { selectMuscle, changeMuscleForce } from '../actions/index';\n\n\nclass MusclePopUp extends Component {\n  shouldComponentUpdate(nextProps) {\n    return (nextProps.selectedMuscle !== this.props.selectedMuscle);\n  }\n\n  closeModal = () => {\n    this.props.selectMuscle(null);\n  }\n\n  isMuscleSelected = () => {\n    if (this.props.selectedMuscle) {\n      return true;\n    }\n    return false;\n  }\n\n  handleForceOnMuscle = (event) => {\n    event.preventDefault();\n    this.props.changeMuscleForce(\n      event.target.innerText,\n      this.props.selectedMuscle,\n      this.props.muscles\n    );\n    this.props.selectMuscle(null);\n  }\n\n  render() {\n    return (\n      <Popup\n        modal\n        position=\"right center\"\n        open={this.isMuscleSelected()}\n        onClose={this.closeModal}\n      >\n        <div className=\"scale-muscle-popup\">\n          <div className=\"gradient-square\">\n            <h5 className=\"gradient-square-text\">{this.props.selectedMuscle}</h5>\n          </div>\n          <button onClick={this.handleForceOnMuscle} className=\"zero-force\">0</button>\n          <button onClick={this.handleForceOnMuscle} className=\"one-force\">1</button>\n          <button onClick={this.handleForceOnMuscle} className=\"two-force\">2</button>\n          <button onClick={this.handleForceOnMuscle} className=\"three-force\">3</button>\n          <button onClick={this.handleForceOnMuscle} className=\"four-force\">4</button>\n          <button onClick={this.handleForceOnMuscle} className=\"five-force\">5</button>\n        </div>\n      </Popup>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    selectedMuscle: state.selectedMuscle,\n    muscles: state.muscles\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n    { selectMuscle, changeMuscleForce },\n    dispatch\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MusclePopUp);\n"]},"metadata":{},"sourceType":"module"}