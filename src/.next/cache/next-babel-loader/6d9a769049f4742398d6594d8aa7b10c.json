{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { PureComponent, Fragment } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport Popup from \"reactjs-popup\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\nimport { enterPatient, pageLoaded } from '../actions/index';\n\nclass PatientPopUp extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.openModal = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        patient: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.props.enterPatient(this.state.patient);\n      this.setState({\n        patient: \"\",\n        open: false\n      });\n    };\n\n    this.focusInput = () => {\n      setTimeout(() => {\n        if (this.patientRefInput) {\n          this.patientRefInput.focus();\n        }\n      }, 100);\n    };\n\n    this.state = {\n      patient: '',\n      open: false\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.firstPageLoad) {\n      this.openModal();\n      this.props.pageLoaded();\n    }\n  }\n\n  render() {\n    return __jsx(Fragment, null, __jsx(\"button\", {\n      className: \"btn btn-blue\",\n      onClick: this.openModal\n    }, \"Change reference \", __jsx(FontAwesomeIcon, {\n      icon: faSearch\n    })), __jsx(Popup, {\n      modal: true,\n      className: \"pop-up-print\",\n      position: \"right center\",\n      open: this.state.open,\n      onClose: this.closeModal,\n      onOpen: this.focusInput\n    }, __jsx(\"form\", {\n      onSubmit: this.handleSubmit\n    }, __jsx(\"div\", {\n      className: \"gradient-square\"\n    }, __jsx(\"h5\", {\n      className: \"gradient-square-text\"\n    }, \"What is the patient's reference?\")), __jsx(\"input\", {\n      className: \"form-control patient-ref-input\",\n      type: \"text\",\n      id: \"ref\",\n      ref: el => {\n        this.patientRefInput = el;\n      },\n      name: \"ref\",\n      required: true,\n      size: \"15\",\n      value: this.state.patient,\n      onChange: this.handleChange\n    }), __jsx(\"button\", {\n      className: \"btn btn-blue btn-pop-up-ok float-right\",\n      type: \"submit\"\n    }, \"Ok\"))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    firstPageLoad: state.firstPageLoad\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    enterPatient,\n    pageLoaded\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PatientPopUp);","map":null,"metadata":{},"sourceType":"module"}