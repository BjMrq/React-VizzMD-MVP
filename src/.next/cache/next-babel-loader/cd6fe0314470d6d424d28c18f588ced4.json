{"ast":null,"code":"var _jsxFileName = \"/home/bjmrq/code/BjMrq/React-VizzMD-MVP/src/containers/PatientPopUp.jsx\";\nvar __jsx = React.createElement;\nimport React, { PureComponent, Fragment } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport Popup from \"reactjs-popup\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\nimport { enterPatient, pageLoaded } from '../actions/index';\n\nclass PatientPopUp extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.openModal = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        patient: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.props.enterPatient(this.state.patient);\n      this.setState({\n        patient: \"\",\n        open: false\n      });\n    };\n\n    this.focusInput = () => {\n      setTimeout(() => {\n        if (this.patientRefInput) {\n          this.patientRefInput.focus();\n        }\n      }, 100);\n    };\n\n    this.state = {\n      patient: '',\n      open: false\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.firstPageLoad) {\n      this.openModal();\n      this.props.pageLoaded();\n    }\n  }\n\n  render() {\n    return __jsx(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, __jsx(\"button\", {\n      className: \"btn btn-blue\",\n      onClick: this.openModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Change reference \", __jsx(FontAwesomeIcon, {\n      icon: faSearch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })), __jsx(Popup, {\n      modal: true,\n      className: \"pop-up-print\",\n      position: \"right center\",\n      open: this.state.open,\n      onClose: this.closeModal,\n      onOpen: this.focusInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, __jsx(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"gradient-square\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, __jsx(\"h5\", {\n      className: \"gradient-square-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"What is the patient's reference?\")), __jsx(\"input\", {\n      className: \"form-control patient-ref-input\",\n      type: \"text\",\n      id: \"ref\",\n      ref: el => {\n        this.patientRefInput = el;\n      },\n      name: \"ref\",\n      required: true,\n      size: \"15\",\n      value: this.state.patient,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), __jsx(\"button\", {\n      className: \"btn btn-blue btn-pop-up-ok float-right\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Ok\"))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    firstPageLoad: state.firstPageLoad\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    enterPatient,\n    pageLoaded\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PatientPopUp);","map":{"version":3,"sources":["/home/bjmrq/code/BjMrq/React-VizzMD-MVP/src/containers/PatientPopUp.jsx"],"names":["React","PureComponent","Fragment","bindActionCreators","connect","Popup","FontAwesomeIcon","faSearch","enterPatient","pageLoaded","PatientPopUp","constructor","props","openModal","setState","open","closeModal","handleChange","event","patient","target","value","handleSubmit","preventDefault","state","focusInput","setTimeout","patientRefInput","focus","componentDidMount","firstPageLoad","render","el","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { PureComponent, Fragment } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport Popup from \"reactjs-popup\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\n\nimport { enterPatient, pageLoaded } from '../actions/index';\n\nclass PatientPopUp extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = { patient: '', open: false };\n  }\n\n  componentDidMount() {\n    if (this.props.firstPageLoad) {\n      this.openModal();\n      this.props.pageLoaded();\n    }\n  }\n\n  openModal = () => {\n    this.setState({ open: true });\n  }\n\n  closeModal = () => {\n    this.setState({ open: false });\n  }\n\n  handleChange = (event) => {\n    this.setState({ patient: event.target.value });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.props.enterPatient(this.state.patient);\n    this.setState({ patient: \"\", open: false });\n  }\n\n  focusInput = () => {\n    setTimeout(() => {\n      if (this.patientRefInput) {\n        this.patientRefInput.focus();\n      }\n    }, 100);\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <button className=\"btn btn-blue\" onClick={this.openModal}>Change reference <FontAwesomeIcon icon={faSearch} /></button>\n        <Popup\n          modal\n          className=\"pop-up-print\"\n          position=\"right center\"\n          open={this.state.open}\n          onClose={this.closeModal}\n          onOpen={this.focusInput}\n        >\n          <form onSubmit={this.handleSubmit} >\n            <div className=\"gradient-square\">\n              <h5 className=\"gradient-square-text\">What is the patient's reference?</h5>\n            </div>\n            <input\n              className=\"form-control patient-ref-input\"\n              type=\"text\"\n              id=\"ref\"\n              ref={(el) => { this.patientRefInput = el; }}\n              name=\"ref\"\n              required\n              size=\"15\"\n              value={this.state.patient}\n              onChange={this.handleChange}\n            />\n            <button className=\"btn btn-blue btn-pop-up-ok float-right\" type=\"submit\">Ok</button>\n          </form>\n\n        </Popup>\n      </Fragment>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    firstPageLoad: state.firstPageLoad\n  };\n}\n\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n    { enterPatient, pageLoaded },\n    dispatch\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PatientPopUp);\n"]},"metadata":{},"sourceType":"module"}