{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { selectMuscle } from '../../actions/index';\n\nclass BodyMusclesCouple extends Component {\n  constructor(...args) {\n    var _temp;\n\n    return _temp = super(...args), this.muscleClass = () => {\n      switch (this.props.muscleForce) {\n        case 1:\n          return \"one-force\";\n\n        case 2:\n          return \"two-force\";\n\n        case 3:\n          return \"three-force\";\n\n        case 4:\n          return \"four-force\";\n\n        case 5:\n          return \"five-force\";\n\n        default:\n          return \"zero-force\";\n      }\n    }, this.handleClickMuscle = event => {\n      event.persist();\n      this.props.selectMuscle(event.target.getAttribute('id'));\n    }, _temp;\n  }\n\n  shouldComponentUpdate(nextProps) {\n    return this.props.muscleForce !== nextProps.muscleForce;\n  }\n\n  render() {\n    return __jsx(\"path\", {\n      id: this.props.muscleId,\n      className: this.muscleClass(),\n      ref: muscleSVG => {\n        this.muscleSVG = muscleSVG;\n      },\n      fill: \" #FFFFFF\",\n      onClick: this.handleClickMuscle,\n      d: this.props.muscleSVGPath,\n      stroke: \"#CD0F0F\",\n      strokeWidth: \"7\"\n    });\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    selectMuscle\n  }, dispatch);\n}\n\nexport default connect(null, mapDispatchToProps)(BodyMusclesCouple);","map":null,"metadata":{},"sourceType":"module"}