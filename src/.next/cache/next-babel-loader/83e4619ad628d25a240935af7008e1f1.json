{"ast":null,"code":"var _jsxFileName = \"/home/bjmrq/code/BjMrq/React-VizzMD-MVP/src/containers/body/BodyMuscle.jsx\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { selectMuscle } from '../../actions/index';\n\nclass BodyMusclesCouple extends Component {\n  constructor(...args) {\n    var _temp;\n\n    return _temp = super(...args), this.muscleClass = () => {\n      switch (this.props.muscleForce) {\n        case 1:\n          return \"one-force\";\n\n        case 2:\n          return \"two-force\";\n\n        case 3:\n          return \"three-force\";\n\n        case 4:\n          return \"four-force\";\n\n        case 5:\n          return \"five-force\";\n\n        default:\n          return \"zero-force\";\n      }\n    }, this.handleClickMuscle = event => {\n      event.persist();\n      this.props.selectMuscle(event.target.getAttribute('id'));\n    }, _temp;\n  }\n\n  shouldComponentUpdate(nextProps) {\n    return this.props.muscleForce !== nextProps.muscleForce;\n  }\n\n  render() {\n    return __jsx(\"path\", {\n      id: this.props.muscleId,\n      className: this.muscleClass(),\n      ref: muscleSVG => {\n        this.muscleSVG = muscleSVG;\n      },\n      fill: \" #FFFFFF\",\n      onClick: this.handleClickMuscle,\n      d: this.props.muscleSVGPath,\n      stroke: \"#CD0F0F\",\n      strokeWidth: \"7\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    });\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    selectMuscle\n  }, dispatch);\n}\n\nexport default connect(null, mapDispatchToProps)(BodyMusclesCouple);","map":{"version":3,"sources":["/home/bjmrq/code/BjMrq/React-VizzMD-MVP/src/containers/body/BodyMuscle.jsx"],"names":["React","Component","bindActionCreators","connect","selectMuscle","BodyMusclesCouple","muscleClass","props","muscleForce","handleClickMuscle","event","persist","target","getAttribute","shouldComponentUpdate","nextProps","render","muscleId","muscleSVG","muscleSVGPath","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,YAAT,QAA6B,qBAA7B;;AAEA,MAAMC,iBAAN,SAAgCJ,SAAhC,CAA0C;AAAA;AAAA;;AAAA,wCAKxCK,WALwC,GAK1B,MAAM;AAClB,cAAQ,KAAKC,KAAL,CAAWC,WAAnB;AACE,aAAK,CAAL;AACE,iBAAO,WAAP;;AACF,aAAK,CAAL;AACE,iBAAO,WAAP;;AACF,aAAK,CAAL;AACE,iBAAO,aAAP;;AACF,aAAK,CAAL;AACE,iBAAO,YAAP;;AACF,aAAK,CAAL;AACE,iBAAO,YAAP;;AACF;AACE,iBAAO,YAAP;AAZJ;AAcD,KApBuC,OAsBxCC,iBAtBwC,GAsBnBC,KAAD,IAAW;AAC7BA,MAAAA,KAAK,CAACC,OAAN;AACA,WAAKJ,KAAL,CAAWH,YAAX,CAAwBM,KAAK,CAACE,MAAN,CAAaC,YAAb,CAA0B,IAA1B,CAAxB;AACD,KAzBuC;AAAA;;AACxCC,EAAAA,qBAAqB,CAACC,SAAD,EAAY;AAC/B,WAAQ,KAAKR,KAAL,CAAWC,WAAX,KAA2BO,SAAS,CAACP,WAA7C;AACD;;AAwBDQ,EAAAA,MAAM,GAAG;AACP,WACE;AAAM,MAAA,EAAE,EAAE,KAAKT,KAAL,CAAWU,QAArB;AAA+B,MAAA,SAAS,EAAE,KAAKX,WAAL,EAA1C;AAA8D,MAAA,GAAG,EAAGY,SAAD,IAAe;AAAE,aAAKA,SAAL,GAAiBA,SAAjB;AAA6B,OAAjH;AAAmH,MAAA,IAAI,EAAC,UAAxH;AAAmI,MAAA,OAAO,EAAE,KAAKT,iBAAjJ;AAAoK,MAAA,CAAC,EAAE,KAAKF,KAAL,CAAWY,aAAlL;AAAiM,MAAA,MAAM,EAAC,SAAxM;AAAkN,MAAA,WAAW,EAAC,GAA9N;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AA/BuC;;AAkC1C,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAOnB,kBAAkB,CACvB;AAAEE,IAAAA;AAAF,GADuB,EAEvBiB,QAFuB,CAAzB;AAID;;AAED,eAAelB,OAAO,CAAC,IAAD,EAAOiB,kBAAP,CAAP,CAAkCf,iBAAlC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { selectMuscle } from '../../actions/index';\n\nclass BodyMusclesCouple extends Component {\n  shouldComponentUpdate(nextProps) {\n    return (this.props.muscleForce !== nextProps.muscleForce);\n  }\n\n  muscleClass = () => {\n    switch (this.props.muscleForce) {\n      case 1:\n        return \"one-force\";\n      case 2:\n        return \"two-force\";\n      case 3:\n        return \"three-force\";\n      case 4:\n        return \"four-force\";\n      case 5:\n        return \"five-force\";\n      default:\n        return \"zero-force\";\n    }\n  }\n\n  handleClickMuscle = (event) => {\n    event.persist();\n    this.props.selectMuscle(event.target.getAttribute('id'));\n  }\n\n  render() {\n    return (\n      <path id={this.props.muscleId} className={this.muscleClass()} ref={(muscleSVG) => { this.muscleSVG = muscleSVG; }} fill=\" #FFFFFF\" onClick={this.handleClickMuscle} d={this.props.muscleSVGPath} stroke=\"#CD0F0F\" strokeWidth=\"7\" />\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n    { selectMuscle },\n    dispatch\n  );\n}\n\nexport default connect(null, mapDispatchToProps)(BodyMusclesCouple);\n"]},"metadata":{},"sourceType":"module"}