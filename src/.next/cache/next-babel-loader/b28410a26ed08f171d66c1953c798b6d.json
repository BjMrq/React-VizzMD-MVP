{"ast":null,"code":"var _jsxFileName = \"/home/bjmrq/code/BjMrq/React-VizzMD-MVP/src/containers/TableRow.jsx\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { selectMuscle } from '../actions/index';\n\nclass TableRow extends Component {\n  constructor(...args) {\n    var _temp;\n\n    return _temp = super(...args), this.handleClickMuscle = event => {\n      event.persist();\n      this.props.selectMuscle(event.target.getAttribute('id'));\n    }, this.btnForceClass = force => {\n      const classes = \"btn btn-force\";\n\n      switch (force) {\n        case 1:\n          {\n            return `${classes} one-force`;\n          }\n\n        case 2:\n          {\n            return `${classes} two-force`;\n          }\n\n        case 3:\n          {\n            return `${classes} three-force`;\n          }\n\n        case 4:\n          {\n            return `${classes} four-force`;\n          }\n\n        case 5:\n          {\n            return `${classes} five-force`;\n          }\n\n        default:\n          {\n            return classes;\n          }\n      }\n    }, _temp;\n  }\n\n  shouldComponentUpdate(nextProps) {\n    return this.props.rightForce !== nextProps.rightForce || this.props.leftForce !== nextProps.leftForce;\n  }\n\n  render() {\n    const {\n      name,\n      nerf,\n      root,\n      rightForce,\n      rightMuscleId,\n      leftForce,\n      leftMuscleId\n    } = this.props;\n    return __jsx(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, __jsx(\"button\", {\n      className: this.btnForceClass(rightForce),\n      id: rightMuscleId,\n      onClick: this.handleClickMuscle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, rightForce, __jsx(\"i\", {\n      className: \"arrow down\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }))), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, name), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, nerf), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, root), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, __jsx(\"button\", {\n      className: this.btnForceClass(leftForce),\n      id: leftMuscleId,\n      onClick: this.handleClickMuscle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, leftForce, __jsx(\"i\", {\n      className: \"arrow down\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    selectedMuscle: state.selectedMuscle\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    selectMuscle\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableRow);","map":{"version":3,"sources":["/home/bjmrq/code/BjMrq/React-VizzMD-MVP/src/containers/TableRow.jsx"],"names":["React","Component","bindActionCreators","connect","selectMuscle","TableRow","handleClickMuscle","event","persist","props","target","getAttribute","btnForceClass","force","classes","shouldComponentUpdate","nextProps","rightForce","leftForce","render","name","nerf","root","rightMuscleId","leftMuscleId","mapStateToProps","state","selectedMuscle","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { selectMuscle } from '../actions/index';\n\nclass TableRow extends Component {\n  shouldComponentUpdate(nextProps) {\n    return (this.props.rightForce !== nextProps.rightForce\n      ||\n      this.props.leftForce !== nextProps.leftForce);\n  }\n\n  handleClickMuscle = (event) => {\n    event.persist();\n    this.props.selectMuscle(event.target.getAttribute('id'));\n  }\n\n  btnForceClass = (force) => {\n    const classes = \"btn btn-force\";\n    switch (force) {\n      case 1: {\n        return `${classes} one-force`;\n      }\n      case 2: {\n        return `${classes} two-force`;\n      }\n      case 3: {\n        return `${classes} three-force`;\n      }\n      case 4: {\n        return `${classes} four-force`;\n      }\n      case 5: {\n        return `${classes} five-force`;\n      }\n      default: {\n        return classes;\n      }\n    }\n  }\n\n  render() {\n    const { name, nerf, root, rightForce, rightMuscleId, leftForce, leftMuscleId } = this.props;\n    return (\n      <tr >\n        <td><button className={this.btnForceClass(rightForce)} id={rightMuscleId} onClick={this.handleClickMuscle}>{rightForce}<i className=\"arrow down\" /></button></td>\n        <td>{name}</td>\n        <td>{nerf}</td>\n        <td>{root}</td>\n        <td><button className={this.btnForceClass(leftForce)} id={leftMuscleId} onClick={this.handleClickMuscle}>{leftForce}<i className=\"arrow down\" /></button></td>\n      </tr>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    selectedMuscle: state.selectedMuscle,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n    { selectMuscle },\n    dispatch\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableRow);\n"]},"metadata":{},"sourceType":"module"}